{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/imageArtem.jpg","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","post","avatar","src","messageData","name","message","time","image","HW1","Affair","affair","smallerFont","priority","removeBtn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","filter","activeBtn","nonActiveBtn","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onAddUserKeyPress","inputClass","value","onChange","onKeyPress","someClass","errorMessage","addBtn","GreetingContainer","setName","setError","trim","addUserCallback","alert","users","length","e","newName","currentTarget","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","checked2","setChecked2","column","blue","superSpan","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.b01ee48b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeBtn\":\"Affairs_activeBtn__vuyqF\",\"nonActiveBtn\":\"Affairs_nonActiveBtn__3oHI6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Message_post__3rEq7\",\"avatar\":\"Message_avatar__2Qh90\",\"messageData\":\"Message_messageData__1UerQ\",\"name\":\"Message_name__30Z7d\",\"message\":\"Message_message__2reZU\",\"time\":\"Message_time__3fhIr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3YZTH\",\"error\":\"Greeting_error__2ZxYh\",\"errorMessage\":\"Greeting_errorMessage__1oHCR\",\"addBtn\":\"Greeting_addBtn__3hQgt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1ipKU\",\"column\":\"HW4_column__2SDRh\",\"superSpan\":\"HW4_superSpan__32_Sn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__1Kdff\",\"error\":\"SuperInputText_error__1u-hp\",\"superInput\":\"SuperInputText_superInput__1rU1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallerFont\":\"Affair_smallerFont__1Kfm5\",\"removeBtn\":\"Affair_removeBtn__2nV2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3d5ji\",\"red\":\"SuperButton_red__1Zelp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__7LAb0\",\"spanClassName\":\"SuperCheckbox_spanClassName__3b5mI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2pN8f\"};","module.exports = __webpack_public_path__ + \"static/media/imageArtem.08ac7b57.jpg\";","import React from \"react\";\r\nimport s from './Message.module.css'\r\n\r\ntype MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.avatar}>\r\n                <img src={props.avatar}/>\r\n            </div>\r\n            <div className={s.messageData}>\r\n                <div className={s.name}>\r\n                    {props.name}\r\n                </div>\r\n                <div className={s.message}>\r\n                    <span>\r\n                        {props.message}\r\n                    </span>\r\n                    <span className={s.time}>\r\n                    {props.time}\r\n                </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\nimport image from \"./imageArtem.jpg\"\r\n\r\nconst messageData = {\r\n    avatar: `${image}`,\r\n    name: \"Artem\",\r\n    message: \"npm start нажимал?\",\r\n    time: \"20:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h4>homework 1:</h4>\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\nimport s from \"./Affair.module.css\"\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.affair.name}\r\n            <span className={s.smallerFont}>(priority: {props.affair.priority})</span>\r\n            <button className={s.removeBtn} onClick={deleteCallback}>x</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport s from \"./Affairs.module.css\"\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // it works:)\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter(\"all\")};\r\n    const setHigh = () => {props.setFilter(\"high\")};\r\n    const setMedium = () => {props.setFilter(\"medium\")};\r\n    const setLow = () => {props.setFilter(\"low\")};\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={props.filter === \"all\" ? s.activeBtn : s.nonActiveBtn} onClick={setAll}>All</button>\r\n            <button className={props.filter === \"high\" ? s.activeBtn : s.nonActiveBtn} onClick={setHigh}>High</button>\r\n            <button className={props.filter === \"medium\" ? s.activeBtn : s.nonActiveBtn} onClick={setMedium}>Medium</button>\r\n            <button className={props.filter === \"low\" ? s.activeBtn : s.nonActiveBtn} onClick={setLow}>Low</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"low\" | \"high\" | \"medium\"\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"medium\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === \"high\") {\r\n        return affairs.filter(a => a.priority === \"high\")\r\n    } else if (filter === \"medium\") {\r\n        return affairs.filter(a => a.priority === \"medium\")\r\n    } else if (filter === \"low\") {\r\n        return affairs.filter(a => a.priority === \"low\")\r\n    } else {\r\n        return affairs;\r\n    }\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter(a => a._id !== _id);\r\n}\r\n\r\nfunction HW2() {\r\n\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h4>homework 2:</h4>\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onAddUserKeyPress: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    addUser: (name: string) => void\r\n    error: string | null\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onAddUserKeyPress} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : \"\";\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} onKeyPress={onAddUserKeyPress} className={inputClass}/>\r\n            <span className={`${s.someClass} ${s.errorMessage}`}>{error}</span>\r\n            <button className={s.addBtn} onClick={() => addUser(name)}>Add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = (props) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newName = e.currentTarget.value\r\n        setName(newName)\r\n    }\r\n    const onAddUserKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError(null)\r\n        if (e.key === \"Enter\") {\r\n            addUser(name)\r\n        }\r\n    }\r\n\r\n    const addUser = (name: string) => {\r\n        if (name.trim() !== \"\") {\r\n            props.addUserCallback(name.trim())\r\n            alert(`Hello ${name.trim()}!`)\r\n            setName(\"\")\r\n        } else {\r\n            setError(\"Username is required\")\r\n        }\r\n    }\r\n\r\n    const totalUsers = props.users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onAddUserKeyPress={onAddUserKeyPress}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]);\r\n\r\n    const addUserCallback = (name: string) => {\r\n        const user = {_id: v1(), name: name}\r\n        setUsers([user, ...users]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h4>homework 3:</h4>\r\n\r\n            {/* works:) */}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// standard input props type:\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// Here we point out that our input will have the same props as those of a standard input.\r\n// (value: string, onChange: ... are not necessary since they are described in DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // + more props that are not contained in a standard input\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, //\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// 'restProps' object containing all the remaining props\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // if there is 'onChange' props\r\n        && onChange(e); // then it gets 'е' (because 'onChange' is not mandatory)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // if 'Enter' key is pressed\r\n        && onEnter // and if there is 'onEnter' props\r\n        && onEnter(); // then 'onEnter' will be called\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // all the remaining props if there are any, including 'value'\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// standard button props type, including 'children' props which stores the button name\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// 'restProps' object containing all the remaining props including 'children'\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // all the remaining props if there are any, including 'children'\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// standard input props type:\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // contains text which is typified in React.FC\r\n\r\n        ...restProps// contains all the remaining props\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // if there is 'onChange'\r\n        && onChange(e); // then it gets 'е' (because 'onChange' is not mandatory)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // 'restProps' object containing all the remaining props including \"checked\"\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // owing to the 'label' tag, clicking the span will place focus at the input\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text.trim() !== \"\" ? \"\" : \"Error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"Enter text...\");\r\n        } else {\r\n            alert(text); // show text if there is no error\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const [checked2, setChecked2] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked2(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h4>homework 4:</h4>\r\n\r\n            <div className={s.column}>\r\n\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    className={s.blue}\r\n                    spanClassName={s.superSpan}\r\n                />\r\n\r\n                <SuperButton\r\n                    red  // this props has boolean value, so it is not mandatory to assign 'true'\r\n                    className={s.blue}\r\n                    onClick={showAlert}\r\n                >\r\n                    Delete {/*the button name can be later found in 'children' props*/}\r\n                </SuperButton>\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    Text\r\n                    {/*this text can be later found in 'children' props*/}\r\n                </SuperCheckbox>\r\n                <SuperCheckbox checked={checked2} onChange={testOnChange}/>\r\n\r\n                <hr/>\r\n                {/*// for personal creativity:*/}\r\n                {/*// <AlternativeSuperInputText/>*/}\r\n                {/*// <AlternativeSuperButton/>*/}\r\n                {/*// <AlternativeSuperCheckbox/>*/}\r\n                {/*// <hr/>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <h3>React homeworks:</h3>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}